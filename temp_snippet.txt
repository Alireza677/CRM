        'stage' => $request->proforma_stage,
        'data'  => $request->all(),
    ]);

    try {
        // -------------------- 1) HARD PRE-CLEAN: Ã˜Â§Ã˜Â¹Ã˜Â¯Ã˜Â§Ã˜Â¯ Ã™ÂÃ˜Â§Ã˜Â±Ã˜Â³Ã›Å’/Ã˜Â¬Ã˜Â¯Ã˜Â§ÃšÂ©Ã™â€ Ã™â€ Ã˜Â¯Ã™â€¡Ã¢â‚¬Å’Ã™â€¡Ã˜Â§ Ã™â€šÃ˜Â¨Ã™â€ž Ã˜Â§Ã˜Â² validate --------------------
        $in = $request->all();

        $removeJunk = static function ($v) {
            if ($v === null || $v === '') return $v;
            $v = (string) $v;

            // Ã˜Â­Ã˜Â°Ã™Â Ã™ÂÃ˜Â§Ã˜ÂµÃ™â€žÃ™â€¡Ã¢â‚¬Å’Ã™â€¡Ã˜Â§Ã›Å’ Ã™â€ Ã˜Â§Ã™â€¦Ã˜Â±Ã˜Â¦Ã›Å’/Ã˜ÂºÃ›Å’Ã˜Â±Ã˜Â§Ã˜Â³Ã˜ÂªÃ˜Â§Ã™â€ Ã˜Â¯Ã˜Â§Ã˜Â±Ã˜Â¯
            $v = str_replace(
                ["\u{200C}", "\u{200B}", "\u{00A0}", "\u{FEFF}", " "],
                '',
                $v
            );

            // Ã˜ÂªÃ˜Â¨Ã˜Â¯Ã›Å’Ã™â€ž Ã˜Â§Ã˜Â±Ã™â€šÃ˜Â§Ã™â€¦ Ã™ÂÃ˜Â§Ã˜Â±Ã˜Â³Ã›Å’/Ã˜Â¹Ã˜Â±Ã˜Â¨Ã›Å’ Ã™Ë† Ã˜Â¬Ã˜Â¯Ã˜Â§ÃšÂ©Ã™â€ Ã™â€ Ã˜Â¯Ã™â€¡Ã¢â‚¬Å’Ã™â€¡Ã˜Â§
            $mapFrom = ['Ã›Â°','Ã›Â±','Ã›Â²','Ã›Â³','Ã›Â´','Ã›Âµ','Ã›Â¶','Ã›Â·','Ã›Â¸','Ã›Â¹','Ã™Â ','Ã™Â¡','Ã™Â¢','Ã™Â£','Ã™Â¤','Ã™Â¥','Ã™Â¦','Ã™Â§','Ã™Â¨','Ã™Â©','Ã™Â¬','Ã™Â«','Ã˜Å’',','];
            $mapTo   = ['0','1','2','3','4','5','6','7','8','9','0','1','2','3','4','5','6','7','8','9','','.','',''];
            $v = str_replace($mapFrom, $mapTo, $v);

            // Ã™â€ ÃšÂ¯Ã™â€¡Ã¢â‚¬Å’Ã˜Â¯Ã˜Â§Ã˜Â´Ã˜ÂªÃ™â€  Ã™ÂÃ™â€šÃ˜Â· Ã˜Â¹Ã˜Â¯Ã˜Â¯/Ã™â€ Ã™â€šÃ˜Â·Ã™â€¡/Ã™â€¦Ã™â€ Ã™ÂÃ›Å’
            $v = preg_replace('/[^0-9.\-]/', '', $v) ?? '';

            // Ã˜Â§ÃšÂ¯Ã˜Â± Ãšâ€ Ã™â€ Ã˜Â¯ Ã™â€ Ã™â€šÃ˜Â·Ã™â€¡ Ã˜Â¨Ã™Ë†Ã˜Â¯Ã˜Å’ Ã˜Â¨Ã™â€¡ Ã›Å’ÃšÂ© Ã™â€ Ã™â€šÃ˜Â·Ã™â€¡ Ã˜ÂªÃ™â€šÃ™â€žÃ›Å’Ã™â€ž Ã›Å’Ã˜Â§Ã˜Â¨Ã˜Â¯
            if (substr_count($v, '.') > 1) {
                $first = strpos($v, '.');
                $v = substr($v, 0, $first + 1) . str_replace('.', '', substr($v, $first + 1));
            }

            return ($v === '' || $v === '-') ? null : $v;
        };

        // Ã™ÂÃ›Å’Ã™â€žÃ˜Â¯Ã™â€¡Ã˜Â§Ã›Å’ Ã˜Â¹Ã˜Â¯Ã˜Â¯Ã›Å’ Ã˜Â³Ã˜Â±Ã˜Â§Ã˜Â³Ã˜Â±Ã›Å’
        foreach (['global_discount_value','global_tax_value','total_subtotal','total_discount','total_tax','total_amount'] as $f) {
            if (array_key_exists($f, $in)) {
                $in[$f] = $removeJunk($in[$f]);
            }
        }

        // Ã™ÂÃ›Å’Ã™â€žÃ˜Â¯Ã™â€¡Ã˜Â§Ã›Å’ Ã˜Â¹Ã˜Â¯Ã˜Â¯Ã›Å’ Ã™â€¦Ã˜Â­Ã˜ÂµÃ™Ë†Ã™â€žÃ˜Â§Ã˜Âª
        if (!empty($in['products']) && is_array($in['products'])) {
            $cleanProducts = [];
            foreach ($in['products'] as $k => $p) {
                $p = is_array($p) ? $p : (array) $p;
                foreach (['price','quantity','discount_value','tax_value'] as $nf) {
                    if (array_key_exists($nf, $p)) {
                        $p[$nf] = $removeJunk($p[$nf]);
                    }
                }
                $cleanProducts[$k] = $p;
            }
            $in['products'] = $cleanProducts;
        }

        $request->replace($in);
        // -------------------- END PRE-CLEAN --------------------

        // -------------------- 2) VALIDATE --------------------
        $validated = $request->validate([
            'subject'           => 'required|string|max:255',
            'proforma_date'     => 'nullable|string',
            'contact_name'      => 'nullable|string|max:255',
            'proforma_stage'    => ['required', Rule::in(array_keys(config('proforma.stages')))],
            'organization_name' => 'nullable|string|max:255',
            'address_type'      => 'required|in:invoice,product',
            'customer_address'  => 'nullable|string',
            'city'              => 'nullable|string|max:255',
            'state'             => 'nullable|string|max:255',
            'assigned_to'       => 'required|exists:users,id',
            'opportunity_id'    => 'nullable|exists:opportunities,id',

            // Ã™â€¦Ã˜Â­Ã˜ÂµÃ™Ë†Ã™â€žÃ˜Â§Ã˜Âª
            'products'                 => 'nullable|array',
            'products.*.name'          => 'nullable|string|max:255',
            'products.*.quantity'      => 'nullable|numeric|min:0.01',
            'products.*.price'         => 'nullable|numeric|min:0',
